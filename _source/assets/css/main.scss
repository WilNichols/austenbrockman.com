---
---
@charset "Utf-8";

@import "Reset";
@import "Vendor/include-media";

@import "Themes/1";
@import "Consts";
@import "Mixins";

@import "Vars";
@import "Utils";
@import "Debug";
@import "Type";

* {
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0,0,0,0) !important;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility;
  @include user-select(none);
}

:root {
  background-color: var(--negative-color);
  @include share(padding, margin, 0);
  font-size: $font--size-base;
  min-height: 100vh;
  min-width: $unit--breakpoint-xxsmall;
  color-scheme: light dark
}

body {
  background-color: var(--theme-background);
  @include share(margin, padding, 0);
  min-height: 100vh;
  display: grid;
  place-content: center;
}

a {
  text-decoration: none;
  position: relative;
  overflow: visible;
  white-space: nowrap; 
  display: inline-block;
  color: var(--theme-links);
  transform: var(--transform, none);
  &::before {
    content: '';
    position: absolute;
    top: -1px;
    @include share(right, left, -6px);
    bottom: -4px;
    background-color: var(--theme-links-background);
    border-radius: 4px;
    z-index: -1;
    opacity: var(--opacity, 0);
  }
  &::after {
    content: '';
    position: absolute;
    height: .125rem;
    @include share(right, bottom, left, 0);
    background-color: var(--theme-links-decoration);
    z-index: 10;
    border-radius: .0625rem;
    transform: var(--transformLine, none);
  }
  &:hover, &.active {
    --opacity: .125;
    --transform: skewX(-4deg) scaleX(.98);
    --transformLine: translateY(2px) scaleX(.95);
  }
}
::selection {
  background: var(--theme-selectionBackgroundColor);
  color: var(--theme-selectionTextColor);
  text-shadow: none;
}

::-moz-selection {
  background: var(--theme-selectionBackgroundColor);
  color: var(--selectionTextColor);
  text-shadow: none;
}

.pageContent {
  padding: var(--viewport-padding);
}
  
// make text elements selectable
p, a:not(.blockLink), b, h1, h2, h3, h4, h5, h6, .aboutMeCaption, .featuredPhotoSetTitle, .featuredPhotoSetDate, .photoSetTitle, .photoSetDate, .postTags, .postDateLarge, .postDate, .postDateSmall, .footerContent, .footerCopyright, li.skill, ul.skills, input, button, li:not(.project), .resumeJobTitle {
  @include user-select(text);
  svg {
    @include user-select(none);
  }
}

.links, .navLinks {
  list-style: none;
  @extend %grid;
  --gridColsMin: 4;
  --gridColsMax: 8;
  z-index: 99999;
  // this will need to adjust with font size
  height: 2.1875rem;
  align-content: end;
  li {
    color: var(--theme-text);
  }
  // responsive
}

.navLinks {
  // responsive
  @include media("≤xSmall") {
      --gridRow: 1 / 2;
      --gridCol: 1 / 7;
    }
  @include media(">xSmall", "≤small") {
    
    --gridRow: 1 / 2;
    //weird way to do this, but it works?
    --gridCol: 1 / 7;
    .aboutMeSection & {
      --gridRow: 2 / 3;
      transform: translateY(-3.5rem);
    }
  }

  @include media(">small") {
    --gridRow: 1 / 2;
    --gridCol: 2 / 12;
  }
  li {
    grid-row: 1 / 2;
    grid-column: var(--colStart)/var(--colEnd);
  }
  @for $i from 1 through 4 {
    li:nth-of-type(#{$i}) {
      --colStart: #{$i};
      --colEnd: #{$i + 1};
    }
  }
}

.links {
  @include media("≤small") {
    width: 100%;
  }
  @include media(">small") {
    width: calc(200% + #{$unit--spacing});
  }
  
  li {
    grid-row: 1 / 2;
    grid-column: var(--colStart)/var(--colEnd);
  }
  @for $i from 1 through 4 {
    li:nth-of-type(#{$i}) {
      --colStart: #{$i};
      --colEnd: #{$i + 1};
    }
  }
}

// Common 

%resetTo100VW {
  width: calc(100% + var(--viewport-padding)*2);
  margin: 0 calc(var(--viewport-padding)*-1);
}

%resetToFull {
  @extend %resetTo100VW;
  --minWidth: calc(#{$unit--breakpoint-xlarge} + var(--viewport-padding)*2);
  min-width: var(--minWidth);
}

.fullWidthSection {
  position: relative;
  padding: 0 var(--viewport-padding);
  @extend %resetTo100VW;
   @include media("≤small") {
    --minWidth: 100%;
  }
}

.contentWrapper {
  @extend %wrapper; 
  position: relative;
}

.contentContainer {
  @extend %grid;
  align-items: center;
}

.footer {
  text-align: center;
  display: block;
  position: absolute;
  @include share(left, right, var(--viewport-padding));
  bottom: max(var(--viewport-padding), env(safe-area-inset-bottom, 0px));
  & > * {
    @include share(height, line-height, 1.5rem);
    display: inline-block;
  }
}

@import "Pages/About";
