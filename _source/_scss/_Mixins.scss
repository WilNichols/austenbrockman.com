@mixin clearfix {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin Print {
  @media  print {
    @content;
  }
}

@mixin share($props.../*, $value */) {
    @for $i from 1 to length($props) {
        #{nth($props, $i)}: nth($props, -1);
    }
}

@mixin user-select($prop) {
  -webkit-user-select: $prop; 
  -ms-user-select: $prop;
  user-select: $prop;
}

@mixin image-set($image, $extension) {
  background-image: url($image + "." + $extension);
  background-repeat: no-repeat;
  background-size: contain;
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) { 
    background-image: url($image + "@2x." + $extension);
  }
}

@mixin image-set-3($image, $extension) {
  background-image: url($image + "." + $extension);
  background-repeat: no-repeat;
  background-size: contain;
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) { 
    background-image: url($image + "@2x." + $extension);
  }
  @media (min--moz-device-pixel-ratio: 2.6), (-o-min-device-pixel-ratio: 5.2 / 2), (-webkit-min-device-pixel-ratio: 2.6), (min-device-pixel-ratio: 2.6), (min-resolution: 2.6dppx) { 
    background-image: url($image + "@3x." + $extension);
  }
}

@mixin themedColor($colorName, $colorLight, $colorLightP3, $colorDark, $colorDarkP3) {
  #{$colorName}: #{$colorLight};
  @media (prefers-color-scheme: light) {
    #{$colorName}: #{$colorLight};
    @supports (color: color(display-p3 1 1 1)) { 
      #{$colorName}: #{$colorLightP3};
    }
  }
  @media (prefers-color-scheme: dark) {
    #{$colorName}: #{$colorDark};
    @supports (color: color(display-p3 1 1 1)) {
      #{$colorName}: #{$colorDarkP3};
    }
  }
}
